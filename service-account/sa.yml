apiVersion: v1
kind: Secret
metadata:
  name: my-docker-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXJodWIuY29tIjp7InVzZXJuYW1lIjoiRFVNTVlfVVNFUk5BTUUiLCJwYXNzd29yZCI6IkRVTU1ZX0RPQ0tFUl9QQVNTV09SRCIsImVtYWlsIjoiRFVNTVlfRE9DS0VSX0VNQUlMIiwiYXV0aCI6IlJGVk5UVmxmVlZORlVrNUJUVVU2UkZWTlRWbGZSRTlEUzBWU1gxQkJVMU5YVDFKRSJ9fX0=
---
apiVersion: v1
kind: Secret
metadata:
  name: my-app-secret
data:
  .app.json: e30=
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-sa
automountServiceAccountToken: false  # Disable token mount in sa level, can be overridden at the pod level.
secrets:  # Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use
- name: my-app-secret
imagePullSecrets:  # for image pull
  - name: my-docker-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: my-sa-long-lived-token
  annotations:
    kubernetes.io/service-account.name: my-sa  # special annotation,
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-sa-role
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-binding
subjects:
  - kind: ServiceAccount
    name: my-sa
roleRef:
  kind: Role
  name: my-sa-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: sa-pod
spec:
  # serviceAccount: my-sa  # this will be deprecated, now it is alis for serviceAccountName
  serviceAccountName: my-sa
  automountServiceAccountToken: true  # override SA automount option
  containers:
  - name: my-container
    image: nginx:alpine
    volumeMounts:
    - mountPath: /my-proj-vol
      name: my-proj-vol
  volumes:
  - name: my-proj-vol
    projected:
      sources:
      - serviceAccountToken:
          path: sa-token
          expirationSeconds: 600 # specify the desired epiration time in seconds
