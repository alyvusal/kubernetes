apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "vpa-ubuntu-stress"
  namespace: "default"
  labels:
    app: "vpa-ubuntu-stress"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "vpa-ubuntu-stress"
  template:
    metadata:
      labels:
        app: "vpa-ubuntu-stress"
    spec:
      containers:
      - name: "vpa-ubuntu-stress"
        image: ubuntu
        command: ["/bin/sh", "-c", "apt-get update && apt-get install -y stress-ng && while true; do stress-ng --cpu 1 --vm 1 --vm-bytes 150M; done"]
        resources:
          requests:
            cpu: 0.05  # 50m
            memory: 50Mi
          limits:
            cpu: 0.10
            memory: 100Mi
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: vpa-auto-ubuntu-stress
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: vpa-ubuntu-stress
  updatePolicy:
    # Off — VPA will only provide the recommendations, and it will not automatically change resource requirements.
    # Initial — VPA only assigns resource requests on pod creation and never changes them later.
    # Recreate — VPA assigns resource requests on pod creation time and updates them on existing pods by evicting and recreating them.
    # Auto mode — It recreates the pod based on the recommendation.
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: '*'
        minAllowed:
          cpu: 200m
          memory: 200Mi
        maxAllowed:
          cpu: 300m  # maximum vpa will be allocating this many cpus even if demand is higher.
          memory: 300Mi
        controlledResources: ["cpu", "memory"]
